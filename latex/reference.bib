@Article{LeuschelB08,
  author = "M. Leuschel and M. Butler",
  title = "{ProB} : an automated analysis toolset for the {B} method",
  journal = "International Journal on Software Tools for Technology Transfer",
  volume = "10",
  number = "2",
  pages = "185--203",
  year = "2008",
}

@book{abrial_modeling_2010,
	title = {Modeling in {Event-B:} System and Software Engineering},
	publisher = {Cambridge University Press},
	author = {{J.-R.} Abrial},
	month = jun,
	year = {2010},
}

@article{LeFo08_237,
  author     = {Michael Leuschel and Marc Fontaine},
  title      = {{Probing the Depths of CSP-M: A new FDR-compliant Validation Tool}},
  journal    = {ICFEM 2008},
  abstract   = {We present a new animation and model checking tool for CSP. The tool
    covers the CSP-M language, as supported by existing tools such as fdr
    and probe. Compared to those tools, it provides visual feedback in the
    source code, has an LTL model checker and can be used for combined
    CSP||B specifications. During the development of the tool some
    intricate issues were uncovered with the CSP-M language. We discuss
    those issues, and provide suggestions for improvement. We also explain
    how we have ensured conformance with fdr, by using fdr itself to
    validate our tool's output. We also provide empirical evidence on the
    performance of our tool compared to fdr, showing that it can be used
    on industrial-strength specifications.},
  publisher  = {Springer-Verlag},
  year       = {2008},
  pages      = {278--297},
}

@inproceedings{LeBu05_1,
  author     = {Michael Leuschel and Michael Butler},
  title      = {Combining {CSP} and {B} for Specification and Property Verification},
  booktitle  = {FM'2005},
  editor     = {John Fitzgerald and Ian Hayes and Andrzej Tarlecki},
  publisher  = {Springer-Verlag},
  series     = {LNCS},
  volume     = {3582},
  month      = {January},
  issn       = {0302-9743},
  pages      = {221--236},
  year       = {2005},
}

@inproceedings{Le01_44,
  author     = {Michael Leuschel},
  title      = {{Design and Implementation of the High-Level Specification Language
    {CSP(LP)}}},
  booktitle  = {PADL},
  abstract   = {We describe practical experiences of using a logic programming based
    approach to model and reason about concurrent systems. We argue that
    logic programming is a good foundation for developing, prototyping,
    animating new specification languages. In particular, we present the
    new high-level specification language CSP(LP), unifying CSP with
    concurrent (constraint) logic programming, and which can be used to
    formally reason both about logical and concurrent aspects of critical
    systems.},
  publisher  = {Springer},
  month      = {October},
  issn       = {0302-9743},
  isbn       = {3-540-41768-0},
  pages      = {14--28},
  series     = {Lecture Notes in Computer Science},
  volume     = {1990},
  year       = {2001},
}

@book{Roscoe97,
 author = {Roscoe, A. W. and Hoare, C. A. R. and Bird, Richard},
 title = {The  Theory and Practice of Concurrency},
 year = {1997},
 isbn = {0136744095},
 publisher = {Prentice Hall PTR},
 address = {Upper Saddle River, NJ, USA},
}

@book{Roscoe10,
 author = {Roscoe, A.W.},
 title = {Understanding Concurrent Systems},
 year = {2010},
 isbn = {184882257X, 9781848822573},
 edition = {1st},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
}

@article{Hoa83,
 author = {C. A. R. Hoare},
 title = {Communicating Sequential Processes},
 journal = {Commun. ACM},
 volume = {26},
 number = {1},
 year = {1983},
 issn = {0001-0782},
 pages = {100--106},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Molina82,
  added-at = {2003-11-20T00:00:00.000+0100},
  author = {Garcia-Molina, Hector},
  biburl = {http://www.bibsonomy.org/bibtex/2ba8fca646c8d97cdd6a80ae4f0bd9ba9/dblp},
  date = {2003-11-20},
  description = {dblp},
  interhash = {a5e9817f8abea507b42457299125576b},
  intrahash = {ba8fca646c8d97cdd6a80ae4f0bd9ba9},
  journal = {IEEE Trans. Computers},
  keywords = {dblp},
  number = 1,
  pages = {48-59},
  timestamp = {2003-11-20T00:00:00.000+0100},
  title = {Elections in a Distributed Computing System.},
  url = {http://dblp.uni-trier.de/db/journals/tc/tc31.html#Garcia-Molina82},
  volume = 31,
  year = 1982
}

@book{Abrial:2010:MES:1855020,
 author = {Abrial, Jean-Raymond},
 title = {Modeling in Event-B: System and Software Engineering},
 year = {2010},
 isbn = {0521895561, 9780521895569},
 edition = {1st},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@book{Abrial:1996:BAP:236705,
 author = {Abrial, J.-R.},
 title = {{The B-Book: Assigning Programs to Meanings}},
 year = {1996},
 isbn = {0-521-49619-5},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@incollection{ng_02_tool,
  abstract = {In this paper, we propose an approach to translating UML to CSP that allows one to utilize both UML and CSP in a system design. To do so, we divide the visualization task based on three aspects of CSP: (i) the dynamics behavior, (ii) the static architecture, and (iii) the refinement assertions. In doing so we are able to visualize CSP via UML in a hierarchical manner which enhances understanding in the design process. In a way, we also provide a formal verification for the UML diagrams using CSP, since there are model checkers like FDR available. We have adopted the use of UML state diagram and class diagram for our work. In addition, we have outlined a prototyped tool that translates these diagrams to CSP that could be model-checked in FDR.},
  added-at = {2009-02-12T11:19:20.000+0100},
  author = {Ng, Muan and Butler, Michael},
  biburl = {http://www.bibsonomy.org/bibtex/2f85564f9f3542df9412fb231efc8ef12/leonardo},
  citeulike-article-id = {2464800},
  doi = {10.1007/3-540-36103-0_31},
  interhash = {a56d8d7a5be7072ec11457d7ae63541f},
  intrahash = {f85564f9f3542df9412fb231efc8ef12},
  journal = {Formal Methods and Software Engineering},
  keywords = {2002 tool csp uml},
  pages = {287--298},
  posted-at = {2008-03-04 13:09:53},
  priority = {2},
  timestamp = {2009-02-12T11:19:20.000+0100},
  title = {Tool Support for Visualizing CSP in UML},
  url = {http://dx.doi.org/10.1007/3-540-36103-0_31},
  year = 2002
}

@inproceedings{LaBeLe09_258,
  author     = {Lukas Ladenberger and Jens Bendisposto and Michael Leuschel},
  title      = {{Visualising Event-B Models with B-Motion Studio}},
  booktitle  = {Proceedings FMICS '09},
  year       = {2009},
  pages      = {202-204},
  editor     = {Mar\'{\i}a Alpuente and Byron Cook and Christophe Joubert},
  publisher  = {Springer},
  series     = {LNCS},
  volume     = {5825},
  isbn       = {978-3-642-04569-1},
  abstract   = {B-MotionStudio provides a way to quickly generate domain specific
    visualisations for a formal model, enabling domain experts and
    managers to understand and validate the model. We also believe that
    our tool will be of use when teaching formal methods, both during
    lectures as a way to motivate students to write their own formal
    models.},
}

@article{cspm,
  author     = {Bryan Scattergood and Philip Armstrong},
  title      = {{CSP-M: A Reference Manual}},
  year       = {2011},
}

@inproceedings{csphash,
author    = {Jun Sun and
               Yang Liu and
               Jin Song Dong and
               Chunqing Chen},
  title     = {{Integrating Specification and Programs for System Modeling
               and Verification}},
  booktitle = {Proceedings TASE '09},
  year      = {2009},
  pages     = {127-135},
  publisher = {IEEE Computer Society},
  editor    = {Wei-Ngan Chin and
               Shengchao Qin},
}

% The Main ProB Article
@article{LeBu08_225,
  author     = {Michael Leuschel and Michael Butler},
  title      = {{ProB: An Automated Analysis Toolset for the B Method}},
  journal    = {STTT},
  volume     = {10},
  number     = {2},
  abstract   = {We present ProB, a validation toolset for the B method. ProB's
    automated animation facilities allow users to gain confidence in their
    specifications. ProB also contains a model checker and a refinement
    checker, both of which can be used to detect various errors in B
    specifications. We describe the underlying methodology of ProB, and
    present the important aspects of the implementation. We also present
    empirical evaluations as well as several case studies, highlighting
    that ProB enables users to uncover errors that are not easily
    discovered by existing tools.},
  publisher  = {Springer-Verlag},
  pages      = {185--203},
  year       = {2008},
}

@incollection{servat2006brama,
  title={{Brama: A new graphic animation tool for B models}},
  author={Servat, Thierry},
  booktitle={B 2007: Formal Specification and Development in B},
  pages={274--276},
  year={2006},
  publisher={Springer}
}

@misc{cssw3c,
author = {{W3C CSS Working Group}},
title = {{Cascading Style Sheets (CSS) Snapshot 2010}},
month = may,
year = {2011},
howpublished = {http://www.w3.org/TR/css-2010/}
}

@misc{svgw3c,
author = {{W3C SVG Working Group}},
title = {{Scalable Vector Graphics (SVG) 1.1 (Second Edition)}},
month = aug,
year = {2011},
howpublished = {http://www.w3.org/TR/SVG11/}
}

@misc{transform,
author = {{W3C SVG Working Group}},
title = {{Scalable Vector Graphics (SVG)}},
month = aug,
year = {2011},
howpublished = {http://www.w3.org/TR/SVG/coords.html}
}

@misc{json,
title = {{ECMA-404 The JSON Data Interchange Standard}},
month = oct,
year = {2013},
howpublished = {Ecma International}
}

@misc{advanced42,
title = {{ADVANCE Deliverable D4.2 (Issue 2)}},
howpublished={{Methods and tools for simulation and testing I}},
month = mar,
year = {2013}
}

@incollection{ng2002tool,
  title={{Tool support for visualizing CSP in UML}},
  author={Ng, Muan Yong and Butler, Michael},
  booktitle={Formal Methods and Software Engineering},
  pages={287--298},
  year={2002},
  publisher={Springer}
}

@inproceedings{Roscoe:Tacas95,
  author    = {{A. W. Roscoe et. al}},
  title     = {{Hierarchical Compression for Model-Checking CSP or How to
               Check 10$^{\mbox{20}}$ Dining Philosophers for Deadlock}},
  booktitle = {Proceedings TACAS 1995},
  pages     = {133-152},
}
@manual{FDRManual,
   title = {{Failures-Divergence Refinement --- FDR2 User Manual (version 2.8.2)}},
   author = {{Formal~Systems~(Europe)~Ltd}},
}
@manual{ProBEManual,
   title = {{Process Behaviour Explorer ({ProBE} {U}ser {M}anual, version 1.30)}},
   author = {{Formal~Systems~(Europe)~Ltd}},
    note = {Available at {\tt 
http://www.fsel.com/probe\_manual.html}},
}

@incollection{abzcasestudy,
year={2014},
isbn={978-3-319-07511-2},
booktitle={ABZ 2014: The Landing Gear Case Study},
volume={433},
series={Communications in Computer and Information Science},
editor={Boniol, Frédéric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter},
doi={10.1007/978-3-319-07512-9_5},
title={Validation of the ABZ Landing Gear System Using ProB},
url={http://dx.doi.org/10.1007/978-3-319-07512-9_5},
publisher={Springer International Publishing},
author={Hansen, Dominik and Ladenberger, Lukas and Wiegard, Harald and Bendisposto, Jens and Leuschel, Michael},
pages={66-79}
}

@inproceedings{SunLDP09,
  author    = {Jun Sun and Yang Liu and Jin Song Dong and Jun Pang},
  title     = {PAT: Towards Flexible Verification under Fairness},
  journal   = {Proceedings of the 21th International Conference on Computer Aided Verification (CAV'09)},
  year      = {2009},
   publisher = {Springer},
  pages     = {709-714},
  series    = {Lecture Notes in Computer Science},
  volume    = {5643},
}

@inproceedings{BeLe07_210,
  abstract   = {Writing a formal specification for real-life, industrial problems is a
    difficult and error prone task, even for experts in formal methods. In
    the process of specifying a formal model for later refinement and
    implementation it is crucial to get approval and feedback from domain
    experts to avoid the costs of changing a specification at a late point
    of the development. But understanding formal models written in a
    specification language like B requires mathematical knowledge a domain
    expert might not have. In this paper we present a new tool to
    visualize B Machines using the ProB animator and Macromedia Flash. Our
    tool offers an easy way for specifiers to build a domain specific
    visualization that can be used by domain experts to check whether a B
    specification corresponds to their expectations.},
  author     = {Jens Bendisposto and Michael Leuschel},
  title      = {A Generic Flash-Based Animation Engine for ProB},
  booktitle  = {Proceedings of B 2007},
  year       = {2007},
  pages      = {266-269},
  editor     = {Jacques Julliand and Olga Kouchnarenko},
  publisher  = {Springer},
  series     = {Lecture Notes in Computer Science},
  volume     = {4355},
  isbn       = {3-540-68760-2},
}

@inproceedings{fdr,
   title={{FDR3 --- A Modern Model Checker for CSP}},
   author={Thomas Gibson-Robinson, Philip Armstrong, Alexandre Boulgakov, A.W. Roscoe},
   booktitle={Tools and Algorithms for the Construction and Analysis of Systems},
   year = {2014},
   pages = {187-201},
   volume={8413},
   series={Lecture Notes in Computer Science},
   editor={Ábrahám, Erika and Havelund, Klaus},
}

@inproceedings{HansenLeuschelTLA2012,
  author     = {Dominik Hansen and Michael Leuschel},
  title      = {Translating {TLA+} to {B} for Validation with {ProB}},
  booktitle  = {Proceedings iFM'2012},
  series     = {LNCS 7321},
  publisher  = {Springer},
  year       = {2012},
  pages      = {24--38},
  month      = {},
  abstract   = {TLA+ and B share the common base of predicate logic, arithmetic and
    set theory. However, there are still considerable differences, such as
    very different approaches to typing and modularization. There is also
    considerable difference in the available tool support. In this paper,
    we present a translation of the non-temporal part of TLA+ to B, which
    makes it possible to feed TLA+ specifications into existing tools for
    B. Part of this translation must include a type inference algorithm,
    in order to produce typed B specifications. There are many other
    tricky aspects, such as translating modules as well as let and
    if-then-else expressions. We also present an integration of our
    translation into ProB. ProB thus provides a complementary tool to the
    explicit state model checker TLC, with convenient animation and
    constraint solving for TLA+. We also present a series of case studies,
    highlighting the complementarity to TLC. In particular, we highlight
    the sometimes dramatic difference in performance when it comes to
    solving complicated constraints in TLA+.},
}

@inproceedings{proz07,
  author     = {Daniel Plagge and Michael Leuschel},
  title      = {Validating {Z} Specifications using the {ProB} Animator and Model
    Checker},
  booktitle  = {Integrated Formal Methods},
  series     = {Lecture Notes in Computer Science},
  volume     = {4591},
  abstract   = {We present the architecture and implementation of the ProZ tool to
    validate high-level Z specifications. The tool was integrated into
    ProB, by providing a translation of Z into B and by extending the
    kernel of ProB to accommodate some new syntax and data types. We
    describe the challenge of going from the tool friendly formalism B to
    the more specification-oriented formalism Z, and show how many Z
    specifications can be systematically translated into B. We describe
    the extensions, such as record types and free types, that had to be
    added to the kernel to support a large subset of Z. As a side-effect,
    we provide a way to animate and model check records in ProB. By
    incorporating ProZ into ProB, we have inherited many of the recent
    extensions developed for B, such as the integration with CSP or the
    animation of recursive functions. Finally, we present a successful
    industrial application, which makes use of this fact, and where ProZ
    was able to discover several errors in Z specifications containing
    higher-order recursive functions.},
  editor     = {J. Davies and J. Gibbons},
  publisher  = {Springer-Verlag},
  pages      = {480--500},
  year       = {2007},
}

@INPROCEEDINGS{Parashkevov96arc,
    author = {Atanas N. Parashkevov and Jay Yantchev},
    title = {ARC - A Tool for Efficient Refinement and Equivalence Checking for CSP},
    booktitle = {In IEEE Int. Conf. on Algorithms and Architectures for Parallel Processing ICA3PP '96},
    year = {1996},
    pages = {68--75}
}

@ARTICLE{1199822, 
author={Hilderink, G.H.}, 
journal={Software, IEE Proceedings -}, 
title={{Graphical modelling language for specifying concurrency based on CSP}}, 
year={2003}, 
month={April}, 
volume={150}, 
number={2}, 
pages={108-120}, 
keywords={communicating sequential processes;concurrency theory;formal specification;specification languages;CSP;communicating sequential process;compositional conflicts;concurrency;concurrent software architectures;deadlocks;formal analysis;graphical modelling language;language notations;software designs}, 
doi={10.1049/ip-sen:20030132}, 
ISSN={1462-5970},}

@inproceedings{so49238,
       booktitle = {Communicating Process Architectures 2004},
           title = {{gCSP: A Graphical Tool for Designing CSP systems}},
          author = {Dusko S. {Jovanovic} and Bojan {Orlic} and Geert K. {Liet} and Jan F. {Broenink}},
       publisher = {IOS Press},
            year = {2004},
          series = { Concurrent Systems Engineering Series 62},
           pages = {233--251},
             url = {http://doc.utwente.nl/49238/},
        abstract = {For broad acceptance of an engineering paradigm, a graphical notation and a supporting design tool seem necessary. This paper discusses certain issues of developing a design environment for building systems based on CSP. Some of the issues discussed depend specifically on the underlying theory of CSP, while a number of them are common for any graphical notation and supporting tools, such as provisions for complexity management and design overview.}
}

